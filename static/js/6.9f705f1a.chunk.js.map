{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComics","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","Error","setContent","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacterByName","name","getAllComics","_transformComics","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","prices","price","Skeleton","className","Spinner","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/6.9f705f1a.chunk.js","sourcesContent":["import { useState, useEffect, } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './singlePage.scss';\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {getComics, getCharacter, clearError, process, setProcess} = useMarvelService();\r\n    \r\n    useEffect(() => {\r\n        updateData();\r\n        // eslint-disable-next-line\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComics(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            default:\r\n                throw new Error('Unexpected id');\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    // const errorMessage = error ? <ErrorMessage/> : null;\r\n    // const spinner = loading ? <Spinner/> : null;\r\n    // const content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {/* {errorMessage}\r\n            {spinner}\r\n            {content} */}\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SinglePage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250 px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=''/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [error, setError] = useState(null);\r\n    //FSM принцип конечного автомата\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        \r\n        // setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            // setLoading(false);\r\n\r\n            return data\r\n        \r\n        } catch(e) {\r\n            // setLoading(false);\r\n            // setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        // setError(null);\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}\r\n\r\nexport default useHttp;\r\n","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=42e09bced1848d4ec4fd4dc5a818c5f2\";\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : \"No Description, Sorry!\",\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"No Description, Sorry!\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n            language: comics.textObjects.language || 'en-us',\r\n            prices: comics.prices.price ? `${comics.prices.price}$` : 'Not Available'\r\n        }\r\n    }\r\n\r\n    return {\r\n            process,\r\n            setProcess,\r\n            getAllCharacters,\r\n            getCharacter, clearError,\r\n            getAllComics,\r\n            getComics,\r\n            getCharacterByName}\r\n}\r\n\r\nexport default useMarvelService","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton/>\r\n        case 'loading':\r\n            return <Spinner/>\r\n        case 'confirmed':\r\n            return <Component data={data}/>\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n        default:\r\n            throw new Error('Unexpected char state')\r\n    }\r\n}\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}