{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","useMarvelService","getAllComics","setProcess","initial","then","onComicListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","prices","renderItems","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","display","width","height","objectFit","margin","img","useHttp","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","clearError","_apiBase","_apiKey","getAllCharacters","a","res","results","_transformCharacter","getCharacterByName","getCharacter","_transformComics","getComics","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","price","avengers","avengersLogo"],"mappings":"gNASMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,cAACG,EAAA,EAAO,IACnB,IAAK,UACD,OAAOD,EAAiB,cAACD,EAAS,IAAK,cAACE,EAAA,EAAO,IACnD,IAAK,YACD,OAAO,cAACF,EAAS,IACrB,IAAK,QACD,OAAO,cAACG,EAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,2BA8EbC,EA1EI,WAEf,MAAoCC,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAChC,EAA4CF,oBAAS,GAAM,mBAApDL,EAAc,KAAEQ,EAAiB,KACxC,EAA4BH,mBAAS,GAAE,mBAAhCI,EAAM,KAAEC,EAAS,KACxB,EAAsCL,oBAAS,GAAM,mBAA9CM,EAAW,KAAEC,EAAc,KAElCC,qBAAU,WACNC,EAAUL,GAAQ,KAEnB,IAEH,MAA4CM,cAArCC,EAAY,EAAZA,aAAclB,EAAO,EAAPA,QAASmB,EAAU,EAAVA,WAExBH,EAAY,SAACL,EAAQS,GACbV,GAAVU,GACAF,EAAaP,GACVU,KAAKC,GACLD,MAAK,kBAAMF,EAAW,iBAGvBG,EAAoB,SAACC,GACvB,IAAIC,GAAQ,EACTD,EAAcE,OAAS,IACtBD,GAAQ,GAEZf,EAAc,GAAD,mBAAKD,GAAU,YAAKe,KACjCb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeU,IA4BnB,OACI,sBAAKE,UAAU,eAAc,UAIxB3B,EAAWC,GAAS,kBA7B7B,SAAqB2B,GACjB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GACzB,OACA,oBAAIL,UAAU,eAAc,SACxB,eAAC,IAAI,CAACM,GAAE,kBAAaF,EAAKG,IAAK,UAC3B,qBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,MAAOX,UAAU,qBACrD,qBAAKA,UAAU,oBAAmB,SAAEI,EAAKO,QACzC,qBAAKX,UAAU,qBAAoB,SAAEI,EAAKQ,aAJhBP,MAStC,OACA,oBAAIL,UAAU,eAAc,SACvBE,IAe0BW,CAAY/B,KAAaN,GACpD,wBACAwB,UAAU,mCACVc,SAAUtC,EACVuC,MAAO,CAAC,QAAW5B,EAAc,OAAS,SAC1C6B,QAAS,kBAAM1B,EAAUL,IAAQ,SAC7B,qBAAKe,UAAU,QAAO,6B,QCrEvBiB,UAjBI,WAEf,OACI,qCACI,eAACC,EAAA,EAAM,WACH,sBACIC,KAAK,cACLC,QAAQ,iCAEZ,mDAEJ,cAACC,EAAA,EAAS,IACV,cAAC,EAAU,S,gCClBR,UAA0B,kC,OCS1B3C,IANM,WACjB,OACI,qBAAKqC,MAAO,CAAEO,QAAS,QAASC,MAAO,SAAUC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UAAWlB,IAAKmB,EAAKjB,IAAI,O,yECmClHkB,EAtCC,WAIZ,MAA8B/C,mBAAS,WAAU,mBAA1CP,EAAO,KAAEmB,EAAU,KA+B1B,MAAO,CAACoC,QA7BQC,sBAAW,uCAAC,WAAOC,GAAG,2FAGZ,OAHcC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,CAAC,eAAgB,oBAG5FzC,EAAW,WAAW,kBAGK0C,MAAMJ,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARE,EAAQ,QACDC,GAAG,CAAD,sBACL,IAAI1D,MAAM,mBAAD,OAAoBoD,EAAG,qBAAaK,EAASE,SAAU,KAAD,oBAEtDF,EAASG,OAAO,KAAD,GAAxB,OAAJC,EAAI,yBAGHA,GAAI,QAKS,MALT,0BAKX/C,EAAW,SAAS,+DAI3B,mDAtB0B,GAsBxB,IAOcgD,WALEX,uBAAY,WAE3BrC,EAAW,aACZ,IAE0BnB,UAASmB,eC+B3BF,IAlEU,WACrB,MAAmDqC,IAA5CC,EAAO,EAAPA,QAASY,EAAU,EAAVA,WAAYnE,EAAO,EAAPA,QAASmB,EAAU,EAAVA,WAE/BiD,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,uCAAG,0CAAAC,EAAA,sDAA2B,OAApB5D,EAAM,+BAFlB,IAEgC,SAC9B4C,EAAQ,GAAD,OAAIa,EAAQ,qCAA6BzD,EAAM,YAAI0D,IAAW,KAAD,EAA7E,OAAHG,EAAG,yBACFA,EAAIN,KAAKO,QAAQ5C,IAAI6C,IAAoB,2CACnD,kBAHqB,mCAKhBC,EAAkB,uCAAG,WAAO9B,GAAI,uFAChBU,EAAQ,GAAD,OAAIa,EAAQ,2BAAmBvB,EAAI,YAAIwB,IAAW,KAAD,EAAjE,OAAHG,EAAG,yBACFA,EAAIN,KAAKO,QAAQ5C,IAAI6C,IAAoB,2CACnD,gBAHuB,sCAKlBE,EAAY,uCAAG,WAAO3C,GAAE,uFACRsB,EAAQ,GAAD,OAAIa,EAAQ,sBAAcnC,EAAE,YAAIoC,IAAW,KAAD,EAA1D,OAAHG,EAAG,yBACFE,EAAoBF,EAAIN,KAAKO,QAAQ,KAAG,2CAClD,gBAHiB,sCAKZvD,EAAY,uCAAG,0CAAAqD,EAAA,sDAAiB,OAAV5D,EAAM,+BAAG,EAAC,SAChB4C,EAAQ,GAAD,OAAIa,EAAQ,qDAA6CzD,EAAM,YAAI0D,IAAW,KAAD,EAA7F,OAAHG,EAAG,yBACFA,EAAIN,KAAKO,QAAQ5C,IAAIgD,IAAiB,2CAChD,kBAHiB,mCAKZC,EAAS,uCAAG,WAAO7C,GAAE,uFACLsB,EAAQ,GAAD,OAAIa,EAAQ,kBAAUnC,EAAE,YAAIoC,IAAW,KAAD,EAAtD,OAAHG,EAAG,yBACFK,EAAiBL,EAAIN,KAAKO,QAAQ,KAAG,2CAC/C,gBAHc,sCAKTC,EAAsB,SAACK,GACzB,MAAO,CACH9C,GAAI8C,EAAK9C,GACTY,KAAMkC,EAAKlC,KACXmC,YAAaD,EAAKC,YAAW,UAAMD,EAAKC,YAAYC,MAAM,EAAG,KAAI,OAAQ,yBACzE9C,UAAW4C,EAAK5C,UAAU+C,KAAO,IAAMH,EAAK5C,UAAUgD,UACtDC,SAAUL,EAAKM,KAAK,GAAG5B,IACvB6B,KAAMP,EAAKM,KAAK,GAAG5B,IACnB8B,OAAQR,EAAKQ,OAAO3D,QAItBiD,EAAmB,SAACU,GACtB,MAAO,CACHtD,GAAIsD,EAAOtD,GACXI,MAAOkD,EAAOlD,MACd2C,YAAaO,EAAOP,aAAe,yBACnC7C,UAAWoD,EAAOpD,UAAU+C,KAAO,IAAMK,EAAOpD,UAAUgD,UAC1DK,UAAWD,EAAOC,UAAS,UAAMD,EAAOC,UAAS,OAAQ,2CACzDC,SAAUF,EAAOG,YAAYD,UAAY,QACzCnD,OAAQiD,EAAOjD,OAAOqD,MAAK,UAAMJ,EAAOjD,OAAOqD,MAAK,KAAM,kBAIlE,MAAO,CACC3F,UACAmB,aACAmD,mBACAM,eAAcT,aACdjD,eACA4D,YACAH,wB,+DCjEG,MAA0B,qCCA1B,MAA0B,0C,OCiB1B5B,IAbG,WACd,OACI,sBAAKrB,UAAU,cAAa,UACxB,qBAAKQ,IAAK0D,EAAUxD,IAAI,aACxB,sBAAKV,UAAU,mBAAkB,mCACP,uBAAK,iBAG/B,qBAAKQ,IAAK2D,EAAczD,IAAI","file":"static/js/7.add0b589.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>\n        case 'confirmed':\n            return <Component/>\n        case 'error':\n            return <ErrorMessage/>\n        default:\n            throw new Error('Unexpected char state')\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n          .then(onComicListLoaded)\n          .then(() => setProcess('confirmed'));\n    }\n    \n    const onComicListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n            <li className=\"comics__item\" key={i}>\n                <Link to={`/comics/${item.id}`}>\n                    <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.prices}</div>\n                </Link>\n            </li>\n            )\n        });\n        return (\n        <ul className=\"comics__grid\">\n            {items}\n        </ul>\n        )\n    }\n\n    // const items = renderItems(comicsList);\n\n    // const errorMessage = error ? <ErrorMessage/> : null;\n    // const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {/* {errorMessage}\n            {spinner}\n            {items} */}\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n            className=\"button button__main button__long\"\n            disabled={newItemLoading}\n            style={{'display': comicsEnded ? \"none\" : 'block'}}\n            onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import {Helmet} from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                    />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250 px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=''/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [error, setError] = useState(null);\r\n    //FSM принцип конечного автомата\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        \r\n        // setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            // setLoading(false);\r\n\r\n            return data\r\n        \r\n        } catch(e) {\r\n            // setLoading(false);\r\n            // setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        // setError(null);\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}\r\n\r\nexport default useHttp;\r\n","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=42e09bced1848d4ec4fd4dc5a818c5f2\";\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : \"No Description, Sorry!\",\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"No Description, Sorry!\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n            language: comics.textObjects.language || 'en-us',\r\n            prices: comics.prices.price ? `${comics.prices.price}$` : 'Not Available'\r\n        }\r\n    }\r\n\r\n    return {\r\n            process,\r\n            setProcess,\r\n            getAllCharacters,\r\n            getCharacter, clearError,\r\n            getAllComics,\r\n            getComics,\r\n            getCharacterByName}\r\n}\r\n\r\nexport default useMarvelService","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}